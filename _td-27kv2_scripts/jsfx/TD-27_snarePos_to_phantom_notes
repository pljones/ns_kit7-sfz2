desc:MIDI Map TD-27 Snare Position CC to phantom note numbers (pljones)
slider1:cc_num=4<0,127,1>-CC Number to track
slider2:expiry_reset=4<1,10,1>-Number of audio blocks for MIDI expiry

@init
// Initialize arrays to -1, as note number 0 is valid
i = 0;
loop(128,
  note_replace[i] = -1;
  i += 1;
);
i = -1;

cc_val = -1;                        // Value of tracked CC, reset on Note On
expiry = 0;                         // Remaining count of blocks before expiry, reset after tracked CC
last_note_on = -1;                  // Last Note On number emitted, excluding repeat notes
last_midi_event = -1;               // Last MIDI event (raw 3 bytes, packed)
replacement = -1;                   // Calculated note number or stored value
replacements = 0;                   // 0 if no replacement notes

@block

// Ensure we eventually (and quite quickly) send those hanging Note Offs
// if somehow they got missed
expiry > 0 ? (
  expiry = expiry - 1;
) :
expiry == 0 && replacements != 0 ? (
  i = 0;
  loop(128,
    replacement = note_replace[i];
    replacement != -1 ? (
      midisend(0, 0x99, (replacement & 0x7F));
      note_replace[i] = -1;
    );
    i += 1;
  );
);

while (
  midirecv(offset, msg1, msg23)
) (
  status = msg1 & 0xF0;
  data1 = msg23 & 0x7F;
  data2 = (msg23 >> 8) & 0x7F;

  // Track CC value for specified CC number
  status == 0xB0 && data1 == cc_num ? (
    cc_val = data2;
  ) :

  // Handle Note On events
  status == 0x90 && data2 != 0 ? (

    cc_val != -1 ? (
      // Preceded by CC
      expiry == 0 ? (
        // Count expired - slow hit
        replacement = ( data1 + 0x40 );
      ) : (
        // Still counting - fast hit
        replacement = ( data1 + 0x42 );
      );
      // Reset the expiry counter on Note On
      expiry = expiry_reset;
    ) : (
      // Not preceded by CC
      expiry == 0 ? (
        // Count expired - drag start
        replacement = ( data1 + 0x44 );
      ) : (
        // Still counting - drag continues
        replacement = ( data1 + 0x48 );
      );
    );

    // Repeat note fills the gap
    last_note_on == replacement ? (
      replacement = ( replacement + 0x01 );
    ) : (
      last_note_on = replacement;
    );

    (note != replacement) ? (replacements = 1);
    note_replace[note] = replacement;
    msg23 = replacement | (data2 << 8);

    // Indicate Note On since last tracked CC
    cc_val = -1;

  ) :

  // Handle Polyphonic Aftertouch and Note Off events
  status == 0xA0 || status == 0x80 || (status == 0x90 && data2 == 0) ? (
    note = data1;
    replacement = note_replace[note];
    // If replacement is set (not -1), use it. Otherwise, just forward the original note off.
    msg23 = ( ( (replacement != -1 ? replacement : note) & 0x7F ) | (data2 << 8) );
  );

  // For all other events, just forward
  midisend(offset, msg1, msg23);
);
